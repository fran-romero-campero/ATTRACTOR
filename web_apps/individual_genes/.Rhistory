radius.1
angle
## Generate coordinates for inner and outer circle in the clock representation for
## clock visualizer
angle <- seq(from=0, to=2*pi, by=0.01)
x.circle.1 <- radius.1*sin(angle)
y.circle.1 <- radius.1*cos(angle)
radius.2 <- radius.1 - radius.1/12
x.circle.2 <- radius.2 * sin(angle)
y.circle.2 <- radius.2 * cos(angle)
#Plot circle
par(mar=c(0,0,0,0))
plot(x.circle.1,y.circle.1, type = "l", lwd=3, axes=FALSE, xlab = "", ylab="",xlim=c(-1.2 * radius.1, 1.2 * radius.1),ylim=c(-1.2 * radius.1, 1.2 * radius.1))
lines(x.circle.2, y.circle.2, lwd=3)
x.polygon <- c(sin(seq(from=0, to=-pi, by=-0.01)) * radius.2,
sin(seq(from=-pi, to=0, by=0.01))* radius.1)
y.polygon <-c(cos(seq(from=0, to=-pi, by=-0.01)) * radius.2,
cos(seq(from=-pi, to=0, by=0.01))*radius.1)
polygon(x = x.polygon, y = y.polygon, col = "black")
for (i in 0:5)
{
angle.zt <- radian.conversion(alpha = 60*i)
zt <- 4*i
current.zt <- paste("ZT", zt,  sep = "")
text(x = (radius.1 + radius.1/6)*sin(angle.zt), y = (radius.1 + radius.1/6)*cos(angle.zt), labels = current.zt,cex = 1.5,font=2)
lines(x = c(radius.1 * sin(angle.zt), (radius.1 + radius.1/20)* sin(angle.zt)),
y = c(radius.1 * cos(angle.zt), (radius.1 + radius.1/20)* cos(angle.zt)), lwd=2)
}
#Function for radian conversion
radian.conversion <- function(alpha)
{
rad <- (alpha*pi/180)
return(rad)
}
## Generate coordinates for inner and outer circle in the clock representation for
## clock visualizer
angle <- seq(from=0, to=2*pi, by=0.01)
x.circle.1 <- radius.1*sin(angle)
y.circle.1 <- radius.1*cos(angle)
radius.2 <- radius.1 - radius.1/12
x.circle.2 <- radius.2 * sin(angle)
y.circle.2 <- radius.2 * cos(angle)
#Plot circle
par(mar=c(0,0,0,0))
plot(x.circle.1,y.circle.1, type = "l", lwd=3, axes=FALSE, xlab = "", ylab="",xlim=c(-1.2 * radius.1, 1.2 * radius.1),ylim=c(-1.2 * radius.1, 1.2 * radius.1))
lines(x.circle.2, y.circle.2, lwd=3)
x.polygon <- c(sin(seq(from=0, to=-pi, by=-0.01)) * radius.2,
sin(seq(from=-pi, to=0, by=0.01))* radius.1)
y.polygon <-c(cos(seq(from=0, to=-pi, by=-0.01)) * radius.2,
cos(seq(from=-pi, to=0, by=0.01))*radius.1)
polygon(x = x.polygon, y = y.polygon, col = "black")
for (i in 0:5)
{
angle.zt <- radian.conversion(alpha = 60*i)
zt <- 4*i
current.zt <- paste("ZT", zt,  sep = "")
text(x = (radius.1 + radius.1/6)*sin(angle.zt), y = (radius.1 + radius.1/6)*cos(angle.zt), labels = current.zt,cex = 1.5,font=2)
lines(x = c(radius.1 * sin(angle.zt), (radius.1 + radius.1/20)* sin(angle.zt)),
y = c(radius.1 * cos(angle.zt), (radius.1 + radius.1/20)* cos(angle.zt)), lwd=2)
}
lines(3,4)
help(lines)
lines(3,45)
x.circle.1
lines(50,45)
lines(-50,45)
coord.x <- c(0,100)
coord.y <- c(50,50)
lines(coord.x, coord.y
)
coord.y <- c(30,30)
lines(coord.x, coord.y)
coord.x <- c(0,100)
coord.y <- c(20,20)
lines(coord.x, coord.y)
coord.y <- c(0,0)
lines(coord.x, coord.y)
lines(coord.x, coord.y, width = 3)
lines(coord.x, coord.y, lwd = 3)
lines(coord.x, coord.y, lwd = 5)
coord.x <- c(0,80)
coord.y <- c(0,0)
lines(coord.x, coord.y, lwd = 5)
#Plot circle
par(mar=c(0,0,0,0))
plot(x.circle.1,y.circle.1, type = "l", lwd=3, axes=FALSE, xlab = "", ylab="",xlim=c(-1.2 * radius.1, 1.2 * radius.1),ylim=c(-1.2 * radius.1, 1.2 * radius.1))
lines(x.circle.2, y.circle.2, lwd=3)
x.polygon <- c(sin(seq(from=0, to=-pi, by=-0.01)) * radius.2,
sin(seq(from=-pi, to=0, by=0.01))* radius.1)
y.polygon <-c(cos(seq(from=0, to=-pi, by=-0.01)) * radius.2,
cos(seq(from=-pi, to=0, by=0.01))*radius.1)
polygon(x = x.polygon, y = y.polygon, col = "black")
for (i in 0:5)
{
angle.zt <- radian.conversion(alpha = 60*i)
zt <- 4*i
current.zt <- paste("ZT", zt,  sep = "")
text(x = (radius.1 + radius.1/6)*sin(angle.zt), y = (radius.1 + radius.1/6)*cos(angle.zt), labels = current.zt,cex = 1.5,font=2)
lines(x = c(radius.1 * sin(angle.zt), (radius.1 + radius.1/20)* sin(angle.zt)),
y = c(radius.1 * cos(angle.zt), (radius.1 + radius.1/20)* cos(angle.zt)), lwd=2)
}
coord.x <- c(0,80)
coord.y <- c(0,0)
lines(coord.x, coord.y, lwd = 5)
coord.x <- c(0,50)
coord.y <- c(0,0)
lines(coord.x, coord.y, lwd = 5)
coord.x <- c(0,50)
coord.y <- c(0,-30)
lines(coord.x, coord.y, lwd = 5)
radius.1
lines(-50,45)
angle.zt
lines(x = c(0, (radius.1 + radius.1/20)* sin(angle.zt)), y = c(0, (radius.1 + radius.1/20)* cos(angle.zt)), lwd = 5)
radius.1
radius.1 <- 80
coord.x <- c(0,50)
coord.y <- c(0,-30)
lines(x = c(0, (radius.1 + radius.1/20)* sin(angle.zt)), y = c(0, (radius.1 + radius.1/20)* cos(angle.zt)), lwd = 5)
#Function for radian conversion
radian.conversion <- function(alpha)
{
rad <- (alpha*pi/180)
return(rad)
}
## Generate coordinates for inner and outer circle in the clock representation for
## clock visualizer
angle <- seq(from=0, to=2*pi, by=0.01)
x.circle.1 <- radius.1*sin(angle)
y.circle.1 <- radius.1*cos(angle)
#Function for radian conversion
radian.conversion <- function(alpha)
{
rad <- (alpha*pi/180)
return(rad)
}
## Generate coordinates for inner and outer circle in the clock representation for
## clock visualizer
angle <- seq(from=0, to=2*pi, by=0.01)
x.circle.1 <- radius.1*sin(angle)
y.circle.1 <- radius.1*cos(angle)
radius.2 <- radius.1 - radius.1/12
x.circle.2 <- radius.2 * sin(angle)
y.circle.2 <- radius.2 * cos(angle)
#Plot circle
par(mar=c(0,0,0,0))
plot(x.circle.1,y.circle.1, type = "l", lwd=3, axes=FALSE, xlab = "", ylab="",xlim=c(-1.2 * radius.1, 1.2 * radius.1),ylim=c(-1.2 * radius.1, 1.2 * radius.1))
lines(x.circle.2, y.circle.2, lwd=3)
x.polygon <- c(sin(seq(from=0, to=-pi, by=-0.01)) * radius.2,
sin(seq(from=-pi, to=0, by=0.01))* radius.1)
y.polygon <-c(cos(seq(from=0, to=-pi, by=-0.01)) * radius.2,
cos(seq(from=-pi, to=0, by=0.01))*radius.1)
polygon(x = x.polygon, y = y.polygon, col = "black")
for (i in 0:5)
{
angle.zt <- radian.conversion(alpha = 60*i)
zt <- 4*i
current.zt <- paste("ZT", zt,  sep = "")
text(x = (radius.1 + radius.1/6)*sin(angle.zt), y = (radius.1 + radius.1/6)*cos(angle.zt), labels = current.zt,cex = 1.5,font=2)
lines(x = c(radius.1 * sin(angle.zt), (radius.1 + radius.1/20)* sin(angle.zt)),
y = c(radius.1 * cos(angle.zt), (radius.1 + radius.1/20)* cos(angle.zt)), lwd=2)
}
radius.1 <- 80
coord.x <- c(0,50)
coord.y <- c(0,-30)
lines(x = c(0, (radius.1 + radius.1/20)* sin(angle.zt)), y = c(0, (radius.1 + radius.1/20)* cos(angle.zt)), lwd = 5)
angle.zt
(radius.1 + radius.1/20)* sin(angle.zt)
radius.1 <- 50
#Plot circle
par(mar=c(0,0,0,0))
plot(x.circle.1,y.circle.1, type = "l", lwd=3, axes=FALSE, xlab = "", ylab="",xlim=c(-1.2 * radius.1, 1.2 * radius.1),ylim=c(-1.2 * radius.1, 1.2 * radius.1))
lines(x.circle.2, y.circle.2, lwd=3)
x.polygon <- c(sin(seq(from=0, to=-pi, by=-0.01)) * radius.2,
sin(seq(from=-pi, to=0, by=0.01))* radius.1)
y.polygon <-c(cos(seq(from=0, to=-pi, by=-0.01)) * radius.2,
cos(seq(from=-pi, to=0, by=0.01))*radius.1)
polygon(x = x.polygon, y = y.polygon, col = "black")
for (i in 0:5)
{
angle.zt <- radian.conversion(alpha = 60*i)
zt <- 4*i
current.zt <- paste("ZT", zt,  sep = "")
text(x = (radius.1 + radius.1/6)*sin(angle.zt), y = (radius.1 + radius.1/6)*cos(angle.zt), labels = current.zt,cex = 1.5,font=2)
lines(x = c(radius.1 * sin(angle.zt), (radius.1 + radius.1/20)* sin(angle.zt)),
y = c(radius.1 * cos(angle.zt), (radius.1 + radius.1/20)* cos(angle.zt)), lwd=2)
}
#Function for radian conversion
radian.conversion <- function(alpha)
{
rad <- (alpha*pi/180)
return(rad)
}
## Generate coordinates for inner and outer circle in the clock representation for
## clock visualizer
angle <- seq(from=0, to=2*pi, by=0.01)
x.circle.1 <- radius.1*sin(angle)
y.circle.1 <- radius.1*cos(angle)
radius.2 <- radius.1 - radius.1/12
x.circle.2 <- radius.2 * sin(angle)
y.circle.2 <- radius.2 * cos(angle)
#Plot circle
par(mar=c(0,0,0,0))
plot(x.circle.1,y.circle.1, type = "l", lwd=3, axes=FALSE, xlab = "", ylab="",xlim=c(-1.2 * radius.1, 1.2 * radius.1),ylim=c(-1.2 * radius.1, 1.2 * radius.1))
lines(x.circle.2, y.circle.2, lwd=3)
x.polygon <- c(sin(seq(from=0, to=-pi, by=-0.01)) * radius.2,
sin(seq(from=-pi, to=0, by=0.01))* radius.1)
y.polygon <-c(cos(seq(from=0, to=-pi, by=-0.01)) * radius.2,
cos(seq(from=-pi, to=0, by=0.01))*radius.1)
polygon(x = x.polygon, y = y.polygon, col = "black")
for (i in 0:5)
{
angle.zt <- radian.conversion(alpha = 60*i)
zt <- 4*i
current.zt <- paste("ZT", zt,  sep = "")
text(x = (radius.1 + radius.1/6)*sin(angle.zt), y = (radius.1 + radius.1/6)*cos(angle.zt), labels = current.zt,cex = 1.5,font=2)
lines(x = c(radius.1 * sin(angle.zt), (radius.1 + radius.1/20)* sin(angle.zt)),
y = c(radius.1 * cos(angle.zt), (radius.1 + radius.1/20)* cos(angle.zt)), lwd=2)
}
radio.flecha <- 50
coord.x <- c(0,50)
coord.y <- c(0,-30)
lines(x = c(0, (radio.flecha + radio.flecha/20)* sin(angle.zt)), y = c(0, (radio.flecha + radio.flecha/20)* cos(angle.zt)), lwd = 5)
radio.flecha + radio.flecha/20)* sin(angle.zt)
(radio.flecha + radio.flecha/20)* sin(angle.zt))
(radio.flecha + radio.flecha/20)* sin(angle.zt)
## Generate coordinates for inner and outer circle in the clock representation for
## clock visualizer
angle <- seq(from=0, to=2*pi, by=0.01)
x.circle.1 <- radius.1*sin(angle)
y.circle.1 <- radius.1*cos(angle)
radius.2 <- radius.1 - radius.1/12
x.circle.2 <- radius.2 * sin(angle)
y.circle.2 <- radius.2 * cos(angle)
#Plot circle
par(mar=c(0,0,0,0))
plot(x.circle.1,y.circle.1, type = "l", lwd=3, axes=FALSE, xlab = "", ylab="",xlim=c(-1.2 * radius.1, 1.2 * radius.1),ylim=c(-1.2 * radius.1, 1.2 * radius.1))
lines(x.circle.2, y.circle.2, lwd=3)
x.polygon <- c(sin(seq(from=0, to=-pi, by=-0.01)) * radius.2,
sin(seq(from=-pi, to=0, by=0.01))* radius.1)
y.polygon <-c(cos(seq(from=0, to=-pi, by=-0.01)) * radius.2,
cos(seq(from=-pi, to=0, by=0.01))*radius.1)
polygon(x = x.polygon, y = y.polygon, col = "black")
for (i in 0:5)
{
angle.zt <- radian.conversion(alpha = 60*i)
zt <- 4*i
current.zt <- paste("ZT", zt,  sep = "")
text(x = (radius.1 + radius.1/6)*sin(angle.zt), y = (radius.1 + radius.1/6)*cos(angle.zt), labels = current.zt,cex = 1.5,font=2)
lines(x = c(radius.1 * sin(angle.zt), (radius.1 + radius.1/20)* sin(angle.zt)),
y = c(radius.1 * cos(angle.zt), (radius.1 + radius.1/20)* cos(angle.zt)), lwd=2)
}
radio.flecha <- 80
coord.x <- c(0,50)
coord.y <- c(0,-30)
lines(x = c(0, cos(angle.zt)*radio.flecha), y = c(0, sin(angle.zt)*radio.flecha), lwd = 5)
#Plot circle
par(mar=c(0,0,0,0))
plot(x.circle.1,y.circle.1, type = "l", lwd=3, axes=FALSE, xlab = "", ylab="",xlim=c(-1.2 * radius.1, 1.2 * radius.1),ylim=c(-1.2 * radius.1, 1.2 * radius.1))
lines(x.circle.2, y.circle.2, lwd=3)
x.polygon <- c(sin(seq(from=0, to=-pi, by=-0.01)) * radius.2,
sin(seq(from=-pi, to=0, by=0.01))* radius.1)
y.polygon <-c(cos(seq(from=0, to=-pi, by=-0.01)) * radius.2,
cos(seq(from=-pi, to=0, by=0.01))*radius.1)
polygon(x = x.polygon, y = y.polygon, col = "black")
for (i in 0:5)
{
angle.zt <- radian.conversion(alpha = 60*i)
zt <- 4*i
current.zt <- paste("ZT", zt,  sep = "")
text(x = (radius.1 + radius.1/6)*sin(angle.zt), y = (radius.1 + radius.1/6)*cos(angle.zt), labels = current.zt,cex = 1.5,font=2)
lines(x = c(radius.1 * sin(angle.zt), (radius.1 + radius.1/20)* sin(angle.zt)),
y = c(radius.1 * cos(angle.zt), (radius.1 + radius.1/20)* cos(angle.zt)), lwd=2)
}
radio.flecha <- 80
lines(x = c(0, -cos(angle.zt)*radio.flecha), y = c(0, sin(angle.zt)*radio.flecha), lwd = 5)
i <- 0
angle.zt <- radian.conversion(alpha = 60*i)
angle.zt
radio.flecha <- 80
lines(x = c(0, -cos(angle.zt)*radio.flecha), y = c(0, sin(angle.zt)*radio.flecha), lwd = 5)
lines(x = c(0, cos(angle.zt)*radio.flecha), y = c(0, sin(angle.zt)*radio.flecha), lwd = 5)
#Plot circle
par(mar=c(0,0,0,0))
plot(x.circle.1,y.circle.1, type = "l", lwd=3, axes=FALSE, xlab = "", ylab="",xlim=c(-1.2 * radius.1, 1.2 * radius.1),ylim=c(-1.2 * radius.1, 1.2 * radius.1))
lines(x.circle.2, y.circle.2, lwd=3)
x.polygon <- c(sin(seq(from=0, to=-pi, by=-0.01)) * radius.2,
sin(seq(from=-pi, to=0, by=0.01))* radius.1)
y.polygon <-c(cos(seq(from=0, to=-pi, by=-0.01)) * radius.2,
cos(seq(from=-pi, to=0, by=0.01))*radius.1)
polygon(x = x.polygon, y = y.polygon, col = "black")
i
angle.zt <- radian.conversion(alpha = 60*i)
zt <- 4*i
current.zt <- paste("ZT", zt,  sep = "")
text(x = (radius.1 + radius.1/6)*sin(angle.zt), y = (radius.1 + radius.1/6)*cos(angle.zt), labels = current.zt,cex = 1.5,font=2)
lines(x = c(radius.1 * sin(angle.zt), (radius.1 + radius.1/20)* sin(angle.zt)),
y = c(radius.1 * cos(angle.zt), (radius.1 + radius.1/20)* cos(angle.zt)), lwd=2)
angle.zt
radius.1
lines(x = c(0, cos(angle.zt)*radio.flecha), y = c(0, sin(angle.zt)*radio.flecha), lwd = 5)
lines(x = c(0, sin(angle.zt)*radio.flecha), y = c(0, sin(angle.zt)*radio.flecha), lwd = 5)
cos(angle.zt)
cos(angle.zt)*radio.flecha
radius.1 <- 100
## Generate coordinates for inner and outer circle in the clock representation for
## clock visualizer
angle <- seq(from=0, to=2*pi, by=0.01)
x.circle.1 <- radius.1*sin(angle)
y.circle.1 <- radius.1*cos(angle)
radius.2 <- radius.1 - radius.1/12
x.circle.2 <- radius.2 * sin(angle)
y.circle.2 <- radius.2 * cos(angle)
#Plot circle
par(mar=c(0,0,0,0))
plot(x.circle.1,y.circle.1, type = "l", lwd=3, axes=FALSE, xlab = "", ylab="",xlim=c(-1.2 * radius.1, 1.2 * radius.1),ylim=c(-1.2 * radius.1, 1.2 * radius.1))
lines(x.circle.2, y.circle.2, lwd=3)
x.polygon <- c(sin(seq(from=0, to=-pi, by=-0.01)) * radius.2,
sin(seq(from=-pi, to=0, by=0.01))* radius.1)
y.polygon <-c(cos(seq(from=0, to=-pi, by=-0.01)) * radius.2,
cos(seq(from=-pi, to=0, by=0.01))*radius.1)
polygon(x = x.polygon, y = y.polygon, col = "black")
for (i in 0:5)
{
angle.zt <- radian.conversion(alpha = 60*i)
zt <- 4*i
current.zt <- paste("ZT", zt,  sep = "")
text(x = (radius.1 + radius.1/6)*sin(angle.zt), y = (radius.1 + radius.1/6)*cos(angle.zt), labels = current.zt,cex = 1.5,font=2)
lines(x = c(radius.1 * sin(angle.zt), (radius.1 + radius.1/20)* sin(angle.zt)),
y = c(radius.1 * cos(angle.zt), (radius.1 + radius.1/20)* cos(angle.zt)), lwd=2)
}
radio.flecha <- 80
lines(x = c(0, cos(angle.zt)*radio.flecha), y = c(0, sin(angle.zt)*radio.flecha), lwd = 5)
angle.zt
i
i <- 0
source('~/Dropbox/github_repos/ATTRACTOR/web_apps/individual_genes/clock_animation.R', echo=TRUE)
angle.zt <- radian.conversion(alpha = 60*i)
lines(x = c(0, cos(angle.zt)*radio.flecha), y = c(0, sin(angle.zt)*radio.flecha), lwd = 5)
i <- 1
angle.zt <- radian.conversion(alpha = 60*i)
lines(x = c(0, cos(angle.zt)*radio.flecha), y = c(0, sin(angle.zt)*radio.flecha), lwd = 5)
i <- 1
alpha = 60*i
alpha
angle.zt <- radian.conversion(alpha = 60*i)
angle.zt <- radian.conversion(alpha = 60*i)
angle.zt
i <- 2
angle.zt <- radian.conversion(alpha = 60*i)
lines(x = c(0, cos(angle.zt)*radio.flecha), y = c(0, sin(angle.zt)*radio.flecha), lwd = 5)
i <- 3
angle.zt <- radian.conversion(alpha = 60*i)
lines(x = c(0, cos(angle.zt)*radio.flecha), y = c(0, sin(angle.zt)*radio.flecha), lwd = 5)
i <- 4
angle.zt <- radian.conversion(alpha = 60*i)
lines(x = c(0, cos(angle.zt)*radio.flecha), y = c(0, sin(angle.zt)*radio.flecha), lwd = 5)
i <- 5
angle.zt <- radian.conversion(alpha = 60*i)
lines(x = c(0, cos(angle.zt)*radio.flecha), y = c(0, sin(angle.zt)*radio.flecha), lwd = 5)
i <- 5
angle.zt <- radian.conversion(alpha = 90*i)
lines(x = c(0, cos(angle.zt)*radio.flecha), y = c(0, sin(angle.zt)*radio.flecha), lwd = 5)
#Plot circle
par(mar=c(0,0,0,0))
plot(x.circle.1,y.circle.1, type = "l", lwd=3, axes=FALSE, xlab = "", ylab="",xlim=c(-1.2 * radius.1, 1.2 * radius.1),ylim=c(-1.2 * radius.1, 1.2 * radius.1))
lines(x.circle.2, y.circle.2, lwd=3)
x.polygon <- c(sin(seq(from=0, to=-pi, by=-0.01)) * radius.2,
sin(seq(from=-pi, to=0, by=0.01))* radius.1)
y.polygon <-c(cos(seq(from=0, to=-pi, by=-0.01)) * radius.2,
cos(seq(from=-pi, to=0, by=0.01))*radius.1)
polygon(x = x.polygon, y = y.polygon, col = "black")
for (i in 0:5)
{
angle.zt <- radian.conversion(alpha = 60*i)
zt <- 4*i
current.zt <- paste("ZT", zt,  sep = "")
text(x = (radius.1 + radius.1/6)*sin(angle.zt), y = (radius.1 + radius.1/6)*cos(angle.zt), labels = current.zt,cex = 1.5,font=2)
lines(x = c(radius.1 * sin(angle.zt), (radius.1 + radius.1/20)* sin(angle.zt)),
y = c(radius.1 * cos(angle.zt), (radius.1 + radius.1/20)* cos(angle.zt)), lwd=2)
}
radio.flecha <- 80
i <- 0
angle.zt <- radian.conversion(alpha = 90*i)
lines(x = c(0, cos(angle.zt)*radio.flecha), y = c(0, sin(angle.zt)*radio.flecha), lwd = 5)
i <- 1
angle.zt <- radian.conversion(alpha = 90*i)
lines(x = c(0, cos(angle.zt)*radio.flecha), y = c(0, sin(angle.zt)*radio.flecha), lwd = 5)
c(0, cos(angle.zt)*radio.flecha)
i <- 2
angle.zt <- radian.conversion(alpha = 90*i)
lines(x = c(0, cos(angle.zt)*radio.flecha), y = c(0, sin(angle.zt)*radio.flecha), lwd = 5)
i <- 3
angle.zt <- radian.conversion(alpha = 90*i)
lines(x = c(0, cos(angle.zt)*radio.flecha), y = c(0, sin(angle.zt)*radio.flecha), lwd = 5)
i <- 1
angle.zt <- radian.conversion(alpha = 45*i)
i <- 0
i <- 3
angle.zt <- radian.conversion(alpha = 45*i)
lines(x = c(0, cos(angle.zt)*radio.flecha), y = c(0, sin(angle.zt)*radio.flecha), lwd = 5)
help(lines)
i <- 0
angle.zt <- radian.conversion(alpha = 60*i)
lines(x = c(0, cos(angle.zt)*radio.flecha), y = c(0, sin(angle.zt)*radio.flecha), lwd = 5)
#Plot circle
par(mar=c(0,0,0,0))
plot(x.circle.1,y.circle.1, type = "l", lwd=3, axes=FALSE, xlab = "", ylab="",xlim=c(-1.2 * radius.1, 1.2 * radius.1),ylim=c(-1.2 * radius.1, 1.2 * radius.1))
lines(x.circle.2, y.circle.2, lwd=3)
x.polygon <- c(sin(seq(from=0, to=-pi, by=-0.01)) * radius.2,
sin(seq(from=-pi, to=0, by=0.01))* radius.1)
y.polygon <-c(cos(seq(from=0, to=-pi, by=-0.01)) * radius.2,
cos(seq(from=-pi, to=0, by=0.01))*radius.1)
polygon(x = x.polygon, y = y.polygon, col = "black")
for (i in 0:5)
{
angle.zt <- radian.conversion(alpha = 60*i)
zt <- 4*i
current.zt <- paste("ZT", zt,  sep = "")
text(x = (radius.1 + radius.1/6)*sin(angle.zt), y = (radius.1 + radius.1/6)*cos(angle.zt), labels = current.zt,cex = 1.5,font=2)
lines(x = c(radius.1 * sin(angle.zt), (radius.1 + radius.1/20)* sin(angle.zt)),
y = c(radius.1 * cos(angle.zt), (radius.1 + radius.1/20)* cos(angle.zt)), lwd=2)
}
radio.flecha <- 80
i <- 0
angle.zt <- radian.conversion(alpha = 60*i)
lines(x = c(0, cos(angle.zt)*radio.flecha), y = c(0, sin(angle.zt)*radio.flecha), lwd = 5)
i <- 1
angle.zt <- radian.conversion(alpha = 60*i)
lines(x = c(0, cos(angle.zt)*radio.flecha), y = c(0, sin(angle.zt)*radio.flecha), lwd = 5)
angle.zt
60*i
cos(angle.zt)*radio.flecha
c(0, sin(angle.zt)*radio.flecha)
#Plot circle
par(mar=c(0,0,0,0))
plot(x.circle.1,y.circle.1, type = "l", lwd=3, axes=FALSE, xlab = "", ylab="",xlim=c(-1.2 * radius.1, 1.2 * radius.1),ylim=c(-1.2 * radius.1, 1.2 * radius.1))
lines(x.circle.2, y.circle.2, lwd=3)
x.polygon <- c(sin(seq(from=0, to=-pi, by=-0.01)) * radius.2,
sin(seq(from=-pi, to=0, by=0.01))* radius.1)
y.polygon <-c(cos(seq(from=0, to=-pi, by=-0.01)) * radius.2,
cos(seq(from=-pi, to=0, by=0.01))*radius.1)
polygon(x = x.polygon, y = y.polygon, col = "black")
for (i in 0:5)
{
angle.zt <- radian.conversion(alpha = 60*i)
zt <- 4*i
current.zt <- paste("ZT", zt,  sep = "")
text(x = (radius.1 + radius.1/6)*sin(angle.zt), y = (radius.1 + radius.1/6)*cos(angle.zt), labels = current.zt,cex = 1.5,font=2)
lines(x = c(radius.1 * sin(angle.zt), (radius.1 + radius.1/20)* sin(angle.zt)),
y = c(radius.1 * cos(angle.zt), (radius.1 + radius.1/20)* cos(angle.zt)), lwd=2)
}
radio.flecha <- 80
i <- 1
angle.zt <- radian.conversion(alpha = 60*i)
lines(x = c(0, sin(angle.zt)*radio.flecha), y = c(0, cos(angle.zt)*radio.flecha), lwd = 5)
i <- 0
angle.zt <- radian.conversion(alpha = 60*i)
lines(x = c(0, sin(angle.zt)*radio.flecha), y = c(0, cos(angle.zt)*radio.flecha), lwd = 5)
i <- 2
angle.zt <- radian.conversion(alpha = 60*i)
lines(x = c(0, sin(angle.zt)*radio.flecha), y = c(0, cos(angle.zt)*radio.flecha), lwd = 5)
help(lines)
i <- 3
angle.zt <- radian.conversion(alpha = 60*i)
lines(x = c(0, sin(angle.zt)*radio.flecha), y = c(0, cos(angle.zt)*radio.flecha), lwd = 5)
shiny::runApp()
runApp()
increase.step
increase.step.clock <- 1
runApp()
runApp()
runApp()
runApp()
#Plot circle
par(mar=c(0,0,0,0))
plot(x.circle.1,y.circle.1, type = "l", lwd=3, axes=FALSE, xlab = "", ylab="",xlim=c(-1.2 * radius.1, 1.2 * radius.1),ylim=c(-1.2 * radius.1, 1.2 * radius.1))
lines(x.circle.2, y.circle.2, lwd=3)
x.polygon <- c(sin(seq(from=0, to=-pi, by=-0.01)) * radius.2,
sin(seq(from=-pi, to=0, by=0.01))* radius.1)
y.polygon <-c(cos(seq(from=0, to=-pi, by=-0.01)) * radius.2,
cos(seq(from=-pi, to=0, by=0.01))*radius.1)
polygon(x = x.polygon, y = y.polygon, col = "black")
for (j in 0:5)
{
angle.zt <- radian.conversion(alpha = 60*j)
zt <- 4*j
current.zt <- paste("ZT", zt,  sep = "")
text(x = (radius.1 + radius.1/6)*sin(angle.zt), y = (radius.1 + radius.1/6)*cos(angle.zt), labels = current.zt,cex = 1.5,font=2)
lines(x = c(radius.1 * sin(angle.zt), (radius.1 + radius.1/20)* sin(angle.zt)),
y = c(radius.1 * cos(angle.zt), (radius.1 + radius.1/20)* cos(angle.zt)), lwd=2)
}
radio.flecha <- 80
i <- 3
angle.zt <- radian.conversion(alpha = 60*i)
arrows(x = c(0, sin(angle.zt)*radio.flecha), y = c(0, cos(angle.zt)*radio.flecha), lwd = 5)
# lines(x = c(0, sin(angle.zt)*radio.flecha), y = c(0, cos(angle.zt)*radio.flecha), lwd = 5)
arrows(x0 = 0, y0 = 0, x1 = sin(angle.zt)*radio.flecha, y1 = cos(angle.zt)*radio.flecha,lwd = 5)
runApp()
runApp()
i <- 3
angle.zt <- radian.conversion(alpha = 60*i)
angle.zt.sec <- radian.conversion(alpha = 6*i) ##10 veces más rápido, 10 veces más pequeño el ángulo
# lines(x = c(0, sin(angle.zt)*radio.flecha), y = c(0, cos(angle.zt)*radio.flecha), lwd = 5)
arrows(x0 = 0, y0 = 0, x1 = sin(angle.zt)*radio.flecha, y1 = cos(angle.zt)*radio.flecha,lwd = 5)
arrows(x0 = 0, y0 = 0, x1 = sin(angle.zt.sec)*radio.flecha, y1 = cos(angle.zt.sec)*radio.flecha,lwd = 5)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
