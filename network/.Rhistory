setwd("~/Dropbox/github_repos/ATTRACTOR/network")
## Input parameters
## Transcription factor, file name containing targets and ZT value
input.xgmml.file <- "attractor.xgmml"
## Load the package required to read XML files.
library("XML")
library("methods")
## Parse the xgmml file making sure the attribute name spaces are kept
result <- xmlTreeParse(file = input.xgmml.file, addAttributeNamespaces = TRUE)
## Extract root node
rootNode <- xmlRoot(result)
## Extract nodes
node.elements <- xmlElementsByTagName(el = rootNode,name = "node")
## Store nodes info
number.nodes <- length(node.elements)
nodes.names <- vector(mode = "character",length = number.nodes)
nodes.x.pos <- vector(mode = "character",length = number.nodes)
nodes.y.pos <- vector(mode = "character",length = number.nodes)
for(i in 1:number.nodes)
{
current.node <- node.elements[[i]]
nodes.names[i] <- xmlAttrs(current.node)[["label"]]
node.graphic.attrs <- xmlAttrs(xmlElementsByTagName(el = current.node, name = "graphics")[[1]])
nodes.x.pos[i] <- node.graphic.attrs[["x"]]
nodes.y.pos[i] <- node.graphic.attrs[["y"]]
}
nodes.df <- data.frame(names=nodes.names,x.pos=nodes.x.pos,y.pos=nodes.y.pos)
head(nodes.df)
## Add info regarding clusters
peak.zt0 <- read.table(file="clusters/peak_ZT0.txt",as.is=T)[[1]]
peak.zt4 <- read.table(file="clusters/peak_ZT4.txt",as.is=T)[[1]]
peak.zt8 <- read.table(file="clusters/peak_ZT8.txt",as.is=T)[[1]]
peak.zt12 <- read.table(file="clusters/peak_ZT12.txt",as.is=T)[[1]]
peak.zt16 <- read.table(file="clusters/peak_ZT16.txt",as.is=T)[[1]]
peak.zt20 <- read.table(file="clusters/peak_ZT20.txt",as.is=T)[[1]]
cluster.genes <- c(peak.zt0, peak.zt4,peak.zt8,peak.zt12,peak.zt16,peak.zt20)
clusters.names <- paste0("peak", c(rep(0,length(peak.zt0)),
rep(4,length(peak.zt4)),
rep(8,length(peak.zt8)),
rep(12,length(peak.zt12)),
rep(16,length(peak.zt16)),
rep(20,length(peak.zt20))))
names(clusters.names) <- cluster.genes
cluster.classification <- clusters.names[as.vector(nodes.df$names)]
names(cluster.classification) <- NULL
nodes.df <- data.frame(nodes.df,cluster.classification)
## Input parameters
## Transcription factor, file name containing targets and ZT value
input.xgmml.file <- "attractor.xgmml"
## Load the package required to read XML files.
library("XML")
library("methods")
## Parse the xgmml file making sure the attribute name spaces are kept
result <- xmlTreeParse(file = input.xgmml.file, addAttributeNamespaces = TRUE)
## Extract root node
rootNode <- xmlRoot(result)
## Extract nodes
node.elements <- xmlElementsByTagName(el = rootNode,name = "node")
## Store nodes info
number.nodes <- length(node.elements)
number.nodes
nodes.names <- vector(mode = "character",length = number.nodes)
nodes.x.pos <- vector(mode = "character",length = number.nodes)
nodes.y.pos <- vector(mode = "character",length = number.nodes)
for(i in 1:number.nodes)
{
current.node <- node.elements[[i]]
nodes.names[i] <- xmlAttrs(current.node)[["label"]]
node.graphic.attrs <- xmlAttrs(xmlElementsByTagName(el = current.node, name = "graphics")[[1]])
nodes.x.pos[i] <- node.graphic.attrs[["x"]]
nodes.y.pos[i] <- node.graphic.attrs[["y"]]
}
nodes.df <- data.frame(names=nodes.names,x.pos=nodes.x.pos,y.pos=nodes.y.pos)
head(nodes.df)
## Add info regarding clusters
peak.zt0 <- read.table(file="clusters/peak_ZT0.txt",as.is=T)[[1]]
peak.zt4 <- read.table(file="clusters/peak_ZT4.txt",as.is=T)[[1]]
peak.zt8 <- read.table(file="clusters/peak_ZT8.txt",as.is=T)[[1]]
peak.zt12 <- read.table(file="clusters/peak_ZT12.txt",as.is=T)[[1]]
peak.zt16 <- read.table(file="clusters/peak_ZT16.txt",as.is=T)[[1]]
peak.zt20 <- read.table(file="clusters/peak_ZT20.txt",as.is=T)[[1]]
cluster.genes <- c(peak.zt0, peak.zt4,peak.zt8,peak.zt12,peak.zt16,peak.zt20)
clusters.names <- paste0("peak", c(rep(0,length(peak.zt0)),
rep(4,length(peak.zt4)),
rep(8,length(peak.zt8)),
rep(12,length(peak.zt12)),
rep(16,length(peak.zt16)),
rep(20,length(peak.zt20))))
names(clusters.names) <- cluster.genes
cluster.classification <- clusters.names[as.vector(nodes.df$names)]
names(cluster.classification) <- NULL
nodes.df <- data.frame(nodes.df,cluster.classification)
write.table(x = nodes.df, file = "attractor_network.tsv",quote = FALSE,sep = "\t",row.names = FALSE)
