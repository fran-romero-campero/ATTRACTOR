runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
shiny::runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
shiny::runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
shiny::runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
shiny::runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
shiny::runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ChIPseeker", version = "3.8")
BiocManager::install("ChIPseeker", version = "3.8")
BiocManager::install("ChIPseeker", version = "3.8")
library("ChIPSeeker")
BiocManager::install("ChIPseeker", version = "3.8")
library("ChIPSeeker")
library("ChIPseeker")
options(repos = BiocInstaller::biocinstallRepos())
getOption("repos")
rsconnect::appDependencies()
options(rsconnect.max.bundle.size=3145728000)
rsconnect::appDependencies()
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BiocGenerics", version = "3.8")
options(repos = BiocInstaller::biocinstallRepos())
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BiocInstaller", version = "3.8")
options(repos = BiocInstaller::biocinstallRepos())
getOption("repos")
shiny::runApp('Dropbox/ATTRACTOR/web_apps/attractor')
runApp('Dropbox/ATTRACTOR/web_apps/peak_visualizer')
runApp('Dropbox/ATTRACTOR/web_apps/attractor')
shiny::runApp('Dropbox/ATTRACTOR/web_apps/attractor')
shiny::runApp('Dropbox/github_repos/ATTRACTOR/web_apps/peak_visualizer')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor')
??????????????
?
""
??????????????""
?????????""
install.packages("PopGenome")
shiny::runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor')
shiny::runApp('Dropbox/github_repos/BRC1_transcriptional_network')
runApp('Dropbox/github_repos/BRC1_transcriptional_network')
options(repos = BiocInstaller::biocinstallRepos())
shiny::runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor')
shiny::runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor_dev')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor_dev')
data.frame(matrix(nrow=nrow(selected.genes.df), ncol=6))
output.selected.genes.df <- data.frame(matrix(nrow=nrow(selected.genes.df), ncol=6))
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor_dev')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor_dev')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor_dev')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor_dev')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor_dev')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor_dev')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor_dev')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor_dev')
## Load library and graph
library(igraph)
## Load ATTRACTOR network and extract gene names
atha.graph <- read.graph(file="../../attractor.graphml", format = "graphml")
## Load ATTRACTOR network and extract gene names
attractor.graph <- read.graph(file="../../attractor.graphml", format = "graphml")
vertex.names <- V(attractor.graph)$name
## Load library and graph
library(igraph)
setwd("~/Dropbox/github_repos/ATTRACTOR/network/analysis/topology")
## Load ATTRACTOR network and extract gene names
attractor.graph <- read.graph(file="../../attractor.graphml", format = "graphml")
vertex.names <- V(attractor.graph)$name
length(vertex.names)
number.nodes <- length(vertex.names)
## Generate random networks similar to attractor
random.network.adjacency <- matrix(nrow=number.nodes,ncol=number.nodes)
head(random.network.adjacency)
sample(16,1:number.nodes)
sample(n=16,x=1:number.nodes)
sample(x = 1:number.nodes,size = 16,replace = FALSE,prob = 1/number.nodes)
sample(x = 1:number.nodes,size = 16,replace = FALSE)
node.regulators <- sample(x = 1:number.nodes,size = 16,replace = FALSE)
sample(n=16,x=1:number.nodes)
node.regulators <- sample(x = 1:number.nodes,size = 16,replace = FALSE)
node.regulators
## Load ATTRACTOR network and extract gene names
attractor.graph <- read.graph(file="../../attractor.graphml", format = "graphml")
vertex.names <- V(attractor.graph)$name
number.nodes <- length(vertex.names)
## Scale free property
in.degree <- degree(graph = attractor.graph,mode = "in")
in.degree.distribution <- table(in.degree)
x.coord <- log10(as.numeric(names(in.degree.distribution)))
y.coord <- log10(in.degree.distribution)
lm.r <- lm(y.coord ~ x.coord)
lm.res <- summary(lm.r)[[4]]
beta <- lm.res[1,1]
alpha <- lm.res[2,1]
x.coord.1 <- seq(from=0,to=2,by=0.01)
y.coord.1 <- beta + alpha*x.coord.1
x.coord.2 <- seq(from=0,to=20,by=0.01)
y.coord.2 <- 10^beta*x.coord.2^alpha
out.degree <- degree(graph = attractor.graph,mode = "out")
out.degree
out.degree[out.degree != 0]
out.degree <- out.degree[out.degree != 0]
length(out.degree)
node.regulators <- sample(x = 1:number.nodes,size = length(out.degree),replace = FALSE)
sample(x = 1:number.nodes,size = out.degree[i],replace=FALSE)
i <- 1
sample(x = 1:number.nodes,size = out.degree[i],replace=FALSE)
random.network.adjacency[node.regulators[i],
sample(x = 1:number.nodes,size = out.degree[i],replace=FALSE)] <- 1
## Generate random networks similar to attractor
random.network.adjacency <- matrix(nrow=number.nodes,ncol=number.nodes)
out.degree <- degree(graph = attractor.graph,mode = "out")
out.degree <- out.degree[out.degree != 0]
node.regulators <- sample(x = 1:number.nodes,size = length(out.degree),replace = FALSE)
for(i in 1:length(out.degree))
{
random.network.adjacency[node.regulators[i],
sample(x = 1:number.nodes,size = out.degree[i],replace=FALSE)] <- 1
}
random.network <- graph.adjacency(adjmatrix = random.network.adjacency,mode = "directed")
in.degree <- degree(graph = random.network,mode = "in")
in.degree.distribution <- table(in.degree)
in.degree.distribution
x.coord <- log10(as.numeric(names(in.degree.distribution)))
y.coord <- log10(in.degree.distribution)
lm.r <- lm(y.coord ~ x.coord)
in.degree.distribution
in.degree.distribution[in.degree.distribution != 0]
names(in.degree.distribution) != 0
in.degree.distribution <- in.degree.distribution[names(in.degree.distribution) != 0]
in.degree.distribution
x.coord <- log10(as.numeric(names(in.degree.distribution)))
y.coord <- log10(in.degree.distribution)
lm.r <- lm(y.coord ~ x.coord)
lm.res <- summary(lm.r)[[4]]
lm.res
lm.r
summary(lm.r)
summary(lm.r)[[5]]
summary(lm.r)[[4]]
summary(lm.r)[[3]]
lm.r
summary(lm.r)[[3]]
summary(lm.r)[[1]]
summary(lm.r)[[2]]
summary(lm.r)[[3]]
summary(lm.r)[[4]]
summary(lm.r)[[5]]
summary(lm.r)[[6]]
summary(lm.r)[[7]]
summary(lm.r)[[8]]
summary(lm.r)
summary(lm.r)[[9]]
summary(lm.r)[[10]]
summary(lm.r)[[11]]
summary(lm.r)[[12]]
summary(lm.r)[[11]]
summary(lm.r)[[10]]
summary(lm.r)
summary(lm.r)[[9]]
summary(lm.r)$coefficients
summary(lm.r)$coefficients[,4]
summary(lm.r)$coefficients[2,4]
number.randomisation <- 1000
number.randomisation <- 1000
r.square <- vector(mode = "numeric", length = number.randomisation)
p.val <- vector(mode = "numeric", length = number.randomisation)
for(j in 1:number.randomisation)
{
random.network.adjacency <- matrix(nrow=number.nodes,ncol=number.nodes)
out.degree <- degree(graph = attractor.graph,mode = "out")
out.degree <- out.degree[out.degree != 0]
node.regulators <- sample(x = 1:number.nodes,size = length(out.degree),replace = FALSE)
for(i in 1:length(out.degree))
{
random.network.adjacency[node.regulators[i],
sample(x = 1:number.nodes,size = out.degree[i],replace=FALSE)] <- 1
}
random.network <- graph.adjacency(adjmatrix = random.network.adjacency,mode = "directed")
in.degree <- degree(graph = random.network,mode = "in")
in.degree.distribution <- table(in.degree)
in.degree.distribution <- in.degree.distribution[names(in.degree.distribution) != 0]
x.coord <- log10(as.numeric(names(in.degree.distribution)))
y.coord <- log10(in.degree.distribution)
lm.r <- lm(y.coord ~ x.coord)
r.square[j] <- summary(lm.r)[[9]]
p.val[j] <- summary(lm.r)$coefficients[2,4]
print(p.val[j])
}
r.square
x.coord <- log10(as.numeric(names(attractor.degree.distribution)))
y.coord <- log10(attractor.degree.distribution)
## Scale free property
in.degree <- degree(graph = attractor.graph,mode = "in")
in.degree.distribution <- table(in.degree)
x.coord <- log10(as.numeric(names(in.degree.distribution)))
y.coord <- log10(in.degree.distribution)
lm.r <- lm(y.coord ~ x.coord)
lm.res <- summary(lm.r)[[4]]
summary(lm.r)
sum(r.square > 0.7988)
sum(r.square > 0.7787)
fdr.val <- p.adjust(p = p.val, method = "BH")
fdr.val < 1e-5
sum(fdr.val < 1e-5)
sum(fdr.val < 1e-4)
sum(fdr.val < 1e-3)
sum(fdr.val < 1e-2)
sum(fdr.val < 0.05)
sum(p.val < 0.05)
sum(r.square > 0.7)
sum(r.square > 0.6)
data.frame(r.square,p.val,fdr.val)
randomisation.result <- data.frame(r.square,p.val,fdr.val)
colnames(randomisation.result) <- c("Rsquare","pvalues","FDR")
write.table(x = randomisation.result,file = "randomisation_result.tsv",quote = F,sep = "\t",row.names = F)
## Load library and graph
library(igraph)
## Load ATTRACTOR network and extract gene names
attractor.graph <- read.graph(file="../../attractor.graphml", format = "graphml")
vertex.names <- V(attractor.graph)$name
number.nodes <- length(vertex.names)
## Scale free property
in.degree <- degree(graph = attractor.graph,mode = "in")
in.degree.distribution <- table(in.degree)
x.coord <- log10(as.numeric(names(in.degree.distribution)))
y.coord <- log10(in.degree.distribution)
lm.r <- lm(y.coord ~ x.coord)
lm.res <- summary(lm.r)[[4]]
beta <- lm.res[1,1]
alpha <- lm.res[2,1]
x.coord.1 <- seq(from=0,to=2,by=0.01)
y.coord.1 <- beta + alpha*x.coord.1
x.coord.2 <- seq(from=0,to=20,by=0.01)
y.coord.2 <- 10^beta*x.coord.2^alpha
plot(x.coord,y.coord)
lines(x.coord.1,y.coord.1)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = expression(paste("4"^"th")),cex = 2,col="darkred",pos = 4)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = expression(paste("y=ax"^"b")),cex = 2,col="darkred",pos = 4)
text(x = 8,y=2700,labels = paste0("a = ",round(10^beta,digits=2)),cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=2500,labels = paste0("b = ",round(alpha,digits=2)),cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=3000,labels = expression(paste("y=ax"^beta)),cex = 2,col="darkred",pos = 4)
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = expression(paste("y=ax"^beta)),cex = 2,col="darkred",pos = 4)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = expression(paste("y=", alpha,"x"^beta)),cex = 2,col="darkred",pos = 4)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = expression(paste("y=", alpha,"x"^beta)),cex = 2,col="darkred",pos = 4)
text(x = 8,y=2600,labels = paste0("a = ",round(10^beta,digits=2)),cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=2200,labels = paste0("b = ",round(alpha,digits=2)),cex = 1.4,col="darkred",pos = 4)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = expression(paste("y=", alpha,"x"^beta)),cex = 2,col="darkred",pos = 4)
text(x = 8,y=2600,labels = paste0(alpha," = ",round(10^beta,digits=2)),cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=2600,labels = expression(paste(alpha," = ",round(10^beta,digits=2))),cex = 1.4,col="darkred",pos = 4)
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = expression(paste("y=", alpha,"x"^beta)),cex = 2,col="darkred",pos = 4)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = expression(paste("y=", alpha,"x"^beta)),cex = 2,col="darkred",pos = 4)
text(x = 8,y=2600,labels = expression(paste(alpha," = ",round(10^beta,digits=2))),cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=2600,labels = expression(paste(alpha," = ",as.character(round(10^beta,digits=2))),cex = 1.4,col="darkred",pos = 4)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = expression(paste("y=", alpha,"x"^beta)),cex = 2,col="darkred",pos = 4)
text(x = 8,y=2600,labels = expression(paste(alpha," = ",as.character(round(10^beta,digits=2))),cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=2600,labels = expression(paste(alpha," = ",as.character(round(10^beta,digits=2)))),cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=2600,labels = expression(paste(alpha," = ",as.character(round(10^beta,digits=2)))),cex = 1.4,col="darkred",pos = 4)
as.character(round(10^beta,digits=2))
alpha.val <- as.character(round(10^beta,digits=2))
text(x = 8,y=2600,labels = expression(paste(alpha," = ",alpha.val)),cex = 1.4,col="darkred",pos = 4)
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = expression(paste("y=", alpha,"x"^beta)),cex = 2,col="darkred",pos = 4)
alpha.val <- as.character(round(10^beta,digits=2))
text(x = 8,y=2600,labels = expression(paste(alpha," = ",alpha.val)),cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=2600,labels = paste0(expression(paste(alpha," = ")),alpha.val),cex = 1.4,col="darkred",pos = 4)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = expression(paste("y=", alpha,"x"^beta)),cex = 2,col="darkred",pos = 4)
alpha.val <- as.character(round(10^beta,digits=2))
text(x = 8,y=2600,labels = paste0(expression(paste(alpha," = ")),alpha.val),cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=2600,labels = expression(paste(alpha," = ")),cex = 1.4,col="darkred",pos = 4)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = expression(paste("y=", alpha,"x"^beta)),cex = 2,col="darkred",pos = 4)
alpha.val <- as.character(round(10^beta,digits=2))
text(x = 8,y=2600,labels = expression(paste(alpha," = ")),cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=2200,labels = paste(beta, " = ",round(alpha,digits=2)),cex = 1.4,col="darkred",pos = 4)
text(x = 9,y=2600,labels = alpha.val,cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=2200,labels = paste(beta, " = ",round(alpha,digits=2)),cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=2200,labels = paste(beta, " = ",cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=2200,labels = expression(paste(beta, " = ")),cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=2200,labels = expression(paste(beta, " = ")),cex = 1.4,col="darkred",pos = 4)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = expression(paste("y=", alpha,"x"^beta)),cex = 2,col="darkred",pos = 4)
alpha.val <- as.character(round(10^beta,digits=2))
text(x = 8,y=2600,labels = expression(paste(alpha," = ")),cex = 1.4,col="darkred",pos = 4)
text(x = 9,y=2600,labels = alpha.val,cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=2200,labels = expression(paste(beta, " = ")),cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=2200,labels = paste(beta, " = ",round(alpha,digits=2)),cex = 1.4,col="darkred",pos = 4)
text(x = 9,y=2200,labels = beta,cex = 1.4,col="darkred",pos = 4)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = expression(paste("y=", alpha,"x"^beta)),cex = 2,col="darkred",pos = 4)
alpha.val <- as.character(round(10^beta,digits=2))
text(x = 8,y=2600,labels = expression(paste(alpha," = ")),cex = 1.4,col="darkred",pos = 4)
text(x = 9,y=2600,labels = alpha.val,cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=2200,labels = expression(paste(beta, " = ")),cex = 1.4,col="darkred",pos = 4)
text(x = 9,y=2200,labels = round(beta,digits=2),cex = 1.4,col="darkred",pos = 4)
## Average path length
path.hist <- path.length.hist(graph = train.network,directed = TRUE)$res
beta <- lm.res[1,1]
alpha <- lm.res[2,1]
x.coord.1 <- seq(from=0,to=2,by=0.01)
y.coord.1 <- beta + alpha*x.coord.1
x.coord.2 <- seq(from=0,to=20,by=0.01)
y.coord.2 <- 10^beta*x.coord.2^alpha
plot(x.coord,y.coord)
lines(x.coord.1,y.coord.1)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = expression(paste("y=", alpha,"x"^beta)),cex = 2,col="darkred",pos = 4)
alpha.val <- as.character(round(10^beta,digits=2))
text(x = 8,y=2600,labels = expression(paste(alpha," = ")),cex = 1.4,col="darkred",pos = 4)
text(x = 9,y=2600,labels = alpha.val,cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=2200,labels = expression(paste(beta, " = ")),cex = 1.4,col="darkred",pos = 4)
text(x = 9,y=2200,labels = round(beta,digits=2),cex = 1.4,col="darkred",pos = 4)
## Scale free property
in.degree <- degree(graph = attractor.graph,mode = "in")
in.degree.distribution <- table(in.degree)
x.coord <- log10(as.numeric(names(in.degree.distribution)))
y.coord <- log10(in.degree.distribution)
lm.r <- lm(y.coord ~ x.coord)
lm.res <- summary(lm.r)[[4]]
beta <- lm.res[1,1]
alpha <- lm.res[2,1]
beta
alpha
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = expression(paste("y=", beta,"x"^alpha)),cex = 2,col="darkred",pos = 4)
alpha.val <- as.character(round(10^beta,digits=2))
text(x = 8,y=2600,labels = expression(paste(alpha," = ")),cex = 1.4,col="darkred",pos = 4)
text(x = 9,y=2600,labels = alpha.val,cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=2200,labels = expression(paste(beta, " = ")),cex = 1.4,col="darkred",pos = 4)
text(x = 9,y=2200,labels = round(beta,digits=2),cex = 1.4,col="darkred",pos = 4)
text(x = 9,y=2200,labels = round(beta.val,digits=2),cex = 1.4,col="darkred",pos = 4)
beta.val <- as.character(round(10^beta,digits=2))
text(x = 9,y=2200,labels = round(beta.val,digits=2),cex = 1.4,col="darkred",pos = 4)
beta.val
text(x = 9,y=2200,labels = round(beta.val,digits=2),cex = 1.4,col="darkred",pos = 4)
beta.val
text(x = 9,y=2200,labels = round(10^beta.val,digits=2),cex = 1.4,col="darkred",pos = 4)
text(x = 9,y=2200,labels = round(10^beta,digits=2),cex = 1.4,col="darkred",pos = 4)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = expression(paste("y=", beta,"x"^alpha)),cex = 2,col="darkred",pos = 4)
text(x = 8,y=2600,labels = expression(paste(alpha," = ")),cex = 1.4,col="darkred",pos = 4)
text(x = 9,y=2600,labels = alpha,cex = 1.4,col="darkred",pos = 4)
text(x = 9,y=2600,labels = round(alpha,digits=2),cex = 1.4,col="darkred",pos = 4)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = expression(paste("y=", beta,"x"^alpha)),cex = 2,col="darkred",pos = 4)
text(x = 8,y=2600,labels = expression(paste(alpha," = ")),cex = 1.4,col="darkred",pos = 4)
text(x = 9,y=2600,labels = round(alpha,digits=2),cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=2200,labels = expression(paste(beta, " = ")),cex = 1.4,col="darkred",pos = 4)
text(x = 9,y=2200,labels = round(10^beta,digits=2),cex = 1.4,col="darkred",pos = 4)
text(x = 9,y=2210,labels = round(10^beta,digits=2),cex = 1.4,col="darkred",pos = 4)
text(x = 9,y=2250,labels = round(10^beta,digits=2),cex = 1.4,col="darkred",pos = 4)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = expression(paste("y=", beta,"x"^alpha)),cex = 2,col="darkred",pos = 4)
text(x = 8,y=2600,labels = expression(paste(alpha," = ")),cex = 1.4,col="darkred",pos = 4)
text(x = 9,y=2600,labels = round(alpha,digits=2),cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=2200,labels = expression(paste(beta, " = ")),cex = 1.4,col="darkred",pos = 4)
text(x = 9,y=2250,labels = round(10^beta,digits=2),cex = 1.4,col="darkred",pos = 4)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = expression(paste("y=", beta,"x"^alpha)),cex = 2,col="darkred",pos = 4)
text(x = 8,y=2600,labels = expression(paste(alpha," = ")),cex = 1.4,col="darkred",pos = 4)
text(x = 9,y=2650,labels = round(alpha,digits=2),cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=2200,labels = expression(paste(beta, " = ")),cex = 1.4,col="darkred",pos = 4)
text(x = 9,y=2250,labels = round(10^beta,digits=2),cex = 1.4,col="darkred",pos = 4)
