end.time <- 2
if(end.time > start.time)
{
factor.hora <- 180/(end.time - start.time)
max.time <- (start.time + end.time)/2
hora <- 0
time.points <- c()
var.cosw <- c()
increment <- 0.01
i <- 1
while(hora < 24)
{
if(hora >= start.time && hora <= end.time)
{
var.cosw[i] <- cos(2*pi*factor.hora*(max.time - hora)/360)
} else
{
var.cosw[i] <- 0
}
time.points[i] <- hora
i <- i + 1
hora <- hora + increment
}
} else
{
day.length <- (24 - start.time) + end.time
factor.hora <- 180/(day.length)
max.time <- start.time + (day.length)/2
hora <- 0
time.points <- c()
var.cosw <- c()
increment <- 0.01
i <- 1
while(hora < 24)
{
if(hora >= start.time)
{
var.cosw[i] <- cos(2*pi*factor.hora*(max.time - hora)/360)
} else if(hora <= end.time)
{
var.cosw[i] <- cos(2*pi*factor.hora*(max.time - (hora+24))/360)
} else
{
var.cosw[i] <- 0
}
time.points[i] <- hora
i <- i + 1
hora <- hora + increment
}
}
plot(time.points,var.cosw)
shiny::runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
shiny::runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
shiny::runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
shiny::runApp('Dropbox/Pedro_de_los_Reyes/arabidopsis_thaliana_clock_network/web_apps/network_visualizer')
runApp('Dropbox/Pedro_de_los_Reyes/arabidopsis_thaliana_clock_network/web_apps/peak_visualizer')
runApp('Dropbox/chlamynet/ChlamyNET')
shiny::runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
shiny::runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
shiny::runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
shiny::runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
shiny::runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
shiny::runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
runApp('Dropbox/chlamynet/ChlamyNET')
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ChIPseeker", version = "3.8")
BiocManager::install("ChIPseeker", version = "3.8")
BiocManager::install("ChIPseeker", version = "3.8")
library("ChIPSeeker")
BiocManager::install("ChIPseeker", version = "3.8")
library("ChIPSeeker")
library("ChIPseeker")
options(repos = BiocInstaller::biocinstallRepos())
getOption("repos")
rsconnect::appDependencies()
options(rsconnect.max.bundle.size=3145728000)
rsconnect::appDependencies()
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BiocGenerics", version = "3.8")
options(repos = BiocInstaller::biocinstallRepos())
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BiocInstaller", version = "3.8")
options(repos = BiocInstaller::biocinstallRepos())
getOption("repos")
shiny::runApp('Dropbox/ATTRACTOR/web_apps/attractor')
runApp('Dropbox/ATTRACTOR/web_apps/peak_visualizer')
runApp('Dropbox/ATTRACTOR/web_apps/attractor')
shiny::runApp('Dropbox/ATTRACTOR/web_apps/attractor')
shiny::runApp('Dropbox/github_repos/ATTRACTOR/web_apps/peak_visualizer')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor')
??????????????
?
""
??????????????""
?????????""
install.packages("PopGenome")
shiny::runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor')
shiny::runApp('Dropbox/github_repos/BRC1_transcriptional_network')
runApp('Dropbox/github_repos/BRC1_transcriptional_network')
options(repos = BiocInstaller::biocinstallRepos())
shiny::runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor')
shiny::runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor_dev')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor_dev')
data.frame(matrix(nrow=nrow(selected.genes.df), ncol=6))
output.selected.genes.df <- data.frame(matrix(nrow=nrow(selected.genes.df), ncol=6))
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor_dev')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor_dev')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor_dev')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor_dev')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor_dev')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor_dev')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor_dev')
runApp('Dropbox/github_repos/ATTRACTOR/web_apps/attractor_dev')
## Load library and graph
library(igraph)
## Load ATTRACTOR network and extract gene names
atha.graph <- read.graph(file="../../attractor.graphml", format = "graphml")
setwd("~/Dropbox/github_repos/ATTRACTOR/network/analysis/topology")
## Load library and graph
library(igraph)
## Load ATTRACTOR network and extract gene names
atha.graph <- read.graph(file="../../attractor.graphml", format = "graphml")
vertex.names <- V(atha.graph)$name
length(vertex.names)
## Scale free property
in.degree <- degree(graph = atha.graph,mode = "in")
in.degree.distribution <- table(in.degree)
x.coord <- log10(as.numeric(names(in.degree.distribution)))
y.coord <- log10(in.degree.distribution)
lm.r <- lm(y.coord ~ x.coord)
summary(lm.r)
beta <- 4.0432
alpha <- -2.8508
x.coord.1 <- seq(from=0,to=2,by=0.01)
y.coord.1 <- beta + alpha*x.coord.1
y.coord.2 <- beta*x.coord^alpha
plot(x.coord,y.coord)
lines(x.coord.1,y.coord.1)
hist(in.degree)
y.coord.2 <- 10^beta*x.coord^alpha
hist(in.degree)
lines(x.coord,y.coord.2)
y.coord.2
x.coord.1 <- seq(from=0,to=2,by=0.01)
y.coord.1 <- beta + alpha*x.coord.1
plot(x.coord,y.coord)
lines(x.coord.1,y.coord.1)
beta <- 4.0432
alpha <- -2.8508
x.coord.1 <- seq(from=0,to=2,by=0.01)
y.coord.1 <- beta + alpha*x.coord.1
plot(x.coord,y.coord)
lines(x.coord.1,y.coord.1)
y.coord.2 <- 10^beta*x.coord^alpha
x.coord
hist(in.degree)
x.coord
x.coord.2 <- seq(from=0,to=20,by=0.01)
y.coord.2 <- 10^beta*x.coord.2^alpha
plot(x.coord,y.coord)
lines(x.coord.1,y.coord.1)
hist(in.degree)
lines(x.coord.2,y.coord.2)
hist(in.degree,xlab="In Degree",ylab="Frequency",main="In Degree Distribution")
hist(in.degree,xlab="In Degree",ylab="Frequency",main="In Degree Distribution",cex.main=2)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue")
lines(x.coord.2,y.coord.2)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=1)
lines(x.coord.2,y.coord.2,lwd=3,lty=2)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=2)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=3)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4)
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
10^beta
text(x = 8,y=300,labels = "y = a*x^b")
text(x = 8,y=3000,labels = "y = a*x^b")
text(x = 8,y=3000,labels = "y = a*x^b",cex = 2)
text(x = 8,y=3000,labels = "y = a*x^b",cex = 2,col="darkred")
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = "y = a*x^b",cex = 2,col="darkred")
text(x = 8,y=3000,labels = "y = a*x^b",cex = 2,col="darkred",pos = 4)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = "y = a*x^b",cex = 2,col="darkred",pos = 4)
10^beta
text(x = 8,y=3000,labels = "y = ax^b",cex = 2,col="darkred",pos = 4)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = "y = ax^b",cex = 2,col="darkred",pos = 4)
summary(lm.r)
summary(lm.r)$Coefficients
summary(lm.r)
summary(lm.r)[[1]]
summary(lm.r)[[2]]
summary(lm.r)[[3]]
summary(lm.r)[[4]]
lm.res <- summary(lm.r)[[4]]
lm.res$Estimate
lm.res <- summary(lm.r)[[4]]
lm.res$Estimate
type.of(lm.res)
typeof(lm.res)
lm.res[,1]
lm.res[1,1]
alpha <- lm.res[2,1]
alpha <- lm.res[2,1]
alpha
x.coord.1 <- seq(from=0,to=2,by=0.01)
y.coord.1 <- beta + alpha*x.coord.1
x.coord.2 <- seq(from=0,to=20,by=0.01)
y.coord.2 <- 10^beta*x.coord.2^alpha
plot(x.coord,y.coord)
lines(x.coord.1,y.coord.1)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = "y = ax^b",cex = 2,col="darkred",pos = 4)
text(x = 8,y=2500,labels = paste0("a = ",10^beta),cex = 2,col="darkred",pos = 4)
text(x = 8,y=3000,labels = "y = ax^b",cex = 2,col="darkred",pos = 4)
text(x = 8,y=2500,labels = paste0("a = ",10^beta),cex = 1.5,col="darkred",pos = 4)
text(x = 8,y=2800,labels = paste0("a = ",10^beta),cex = 1.5,col="darkred",pos = 4)
text(x = 8,y=2700,labels = paste0("a = ",10^beta),cex = 1.5,col="darkred",pos = 4)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = "y = ax^b",cex = 2,col="darkred",pos = 4)
text(x = 8,y=2700,labels = paste0("a = ",10^beta),cex = 1.5,col="darkred",pos = 4)
text(x = 8,y=2700,labels = paste0("a = ",round(10^beta,digits=2)),cex = 1.5,col="darkred",pos = 4)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = "y = ax^b",cex = 2,col="darkred",pos = 4)
text(x = 8,y=2700,labels = paste0("a = ",round(10^beta,digits=2)),cex = 1.5,col="darkred",pos = 4)
text(x = 8,y=2500,labels = paste0("b = ",round(alpha,digits=2)),cex = 1.5,col="darkred",pos = 4)
hist(in.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = "y = ax^b",cex = 2,col="darkred",pos = 4)
text(x = 8,y=2700,labels = paste0("a = ",round(10^beta,digits=2)),cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=2500,labels = paste0("b = ",round(alpha,digits=2)),cex = 1.4,col="darkred",pos = 4)
## Scale free property
out.degree <- degree(graph = atha.graph,mode = "out")
out.degree
out.degree.distribution <- table(out.degree)
out.degree.distribution
## Load ATTRACTOR network and extract gene names
atha.graph <- read.graph(file="../../attractor.graphml", format = "graphml",directed=TRUE)
## Load ATTRACTOR network and extract gene names
atha.graph <- read.graph(file="../../attractor.graphml", format = "graphml")
vertex.names <- V(atha.graph)$name
length(vertex.names)
## Scale free property
in.degree <- degree(graph = atha.graph,mode = "in")
## Scale free property
out.degree <- degree(graph = atha.graph,mode = "out")
out.degree.distribution <- table(out.degree)
out.degree.distribution
hist(out.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
## Scale free property
attractor.degree <- degree(graph = atha.graph)
attractor.degree
attractor.degree.distribution <- table(attractor.degree)
attractor.degree.distribution
hist(attractor.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue")
hist(attractor.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue",xlim=c(0.100))
hist(attractor.degree,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue",xlim=c(0,100))
hist(attractor.degree,breaks=100,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue",xlim=c(0,100))
hist(attractor.degree,breaks=1000,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue",xlim=c(0,100))
hist(attractor.degree,breaks=10000,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue",xlim=c(0,100))
hist(attractor.degree,breaks=10000,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue",xlim=c(0,20))
hist(attractor.degree,breaks=1000,
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue",xlim=c(0,20))
hist(attractor.degree,breaks=seq(from=0,to=100,by=1),
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue",xlim=c(0,20))
hist(attractor.degree,breaks=seq(from=0,to=1000,by=1),
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue",xlim=c(0,20))
hist(attractor.degree,breaks=seq(from=0,to=10000,by=1),
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue",xlim=c(0,20))
## Scale free property
attractor.degree <- degree(graph = atha.graph)
attractor.degree.distribution <- table(attractor.degree)
x.coord <- log10(as.numeric(names(attractor.degree.distribution)))
y.coord <- log10(attractor.degree.distribution)
lm.r <- lm(y.coord ~ x.coord)
lm.res <- summary(lm.r)[[4]]
lm.res
beta <- lm.res[1,1]
alpha <- lm.es[2,1]
beta
summary(lm.r)[[4]]
summary(lm.r)
beta <- lm.res[1,1]
alpha <- lm.es[2,1]
x.coord.1 <- seq(from=0,to=20,by=0.01)
y.coord.1 <- beta + alpha*x.coord.1
x.coord.2 <- seq(from=0,to=20,by=0.01)
y.coord.2 <- 10^beta*x.coord.2^alpha
plot(x.coord,y.coord)
lines(x.coord.1,y.coord.1)
hist(attractor.degree,breaks=seq(from=0,to=10000,by=1),
xlab="In Degree",ylab="Frequency",
main="In Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue",xlim=c(0,20))
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
hist(attractor.degree,breaks=seq(from=0,to=10000,by=1),
xlab="Degree",ylab="Frequency",
main="Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue",xlim=c(0,20))
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=3000,labels = "y = ax^b",cex = 2,col="darkred",pos = 4)
text(x = 8,y=1500,labels = "y = ax^b",cex = 2,col="darkred",pos = 4)
text(x = 8,y=1300,labels = paste0("a = ",round(10^beta,digits=2)),cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=1100,labels = paste0("b = ",round(alpha,digits=2)),cex = 1.4,col="darkred",pos = 4)
summary(lm.r)
lm.res <- summary(lm.r)[[4]]
beta <- lm.res[1,1]
alpha <- lm.es[2,1]
x.coord.1 <- seq(from=0,to=20,by=0.01)
y.coord.1 <- beta + alpha*x.coord.1
x.coord.2 <- seq(from=0,to=20,by=0.01)
y.coord.2 <- 10^beta*x.coord.2^alpha
plot(x.coord,y.coord)
lines(x.coord.1,y.coord.1)
hist(attractor.degree,breaks=seq(from=0,to=10000,by=1),
xlab="Degree",ylab="Frequency",
main="Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue",xlim=c(0,20))
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
summary(lm.r)
lm.res <- summary(lm.r)[[4]]
lm.res
beta <- lm.res[1,1]
alpha <- lm.es[2,1]
beta
alpha
beta <- lm.res[1,1]
alpha <- lm.res[2,1]
x.coord.1 <- seq(from=0,to=20,by=0.01)
y.coord.1 <- beta + alpha*x.coord.1
x.coord.2 <- seq(from=0,to=20,by=0.01)
y.coord.2 <- 10^beta*x.coord.2^alpha
plot(x.coord,y.coord)
lines(x.coord.1,y.coord.1)
hist(attractor.degree,breaks=seq(from=0,to=10000,by=1),
xlab="Degree",ylab="Frequency",
main="Degree Distribution",
cex.main=2,cex.lab=1.5,border="darkblue",lwd=2,col="lightblue",xlim=c(0,20))
lines(x.coord.2,y.coord.2,lwd=3,lty=4,col="darkred")
text(x = 8,y=1500,labels = "y = ax^b",cex = 2,col="darkred",pos = 4)
text(x = 8,y=1300,labels = paste0("a = ",round(10^beta,digits=2)),cex = 1.4,col="darkred",pos = 4)
text(x = 8,y=1100,labels = paste0("b = ",round(alpha,digits=2)),cex = 1.4,col="darkred",pos = 4)
summary(lm.r)
