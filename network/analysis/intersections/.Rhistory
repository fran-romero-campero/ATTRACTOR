intersection.genes <- (results.table$Table)[["Elements"]][nrow(results.table$Table)]
intersection.genes <- strsplit(intersection.genes, split = ", ")[[1]]
intersection.data[[1]] <- p.value
intersection.data[[2]] <- enrichment
intersection.genes.agi <- intersection.genes
intersection.genes.primary.symbol <- alias[intersection.genes]
names(intersection.genes.primary.symbol) <- NULL
gene.table <- matrix(nrow=length(intersection.genes), ncol=3)
colnames(gene.table) <- c("AGI", "Primary Symbol", "Description")
gene.table[,1] <- intersection.genes.agi
gene.table[,2] <- intersection.genes.primary.symbol
intersection.data[[1]] <- p.value
intersection.data[[2]] <- enrichment
intersection.data[[3]] <- gene.table
intersection.genes.description <- gene.descriptions[intersection.genes]
names(intersection.genes.description) <- NULL
intersection.genes.description <- gene.descriptions[intersection.genes]
names(intersection.genes.description) <- NULL
intersection.genes.description <- gene.descriptions[intersection.genes]
names(intersection.genes.description) <- NULL
intersection.data[[3]] <- data.frame(intersection.genes,intersection.genes.primary.symbol,intersection.genes.description,stringsAsFactors = F)
names(intersection.data) <- c("p-value", "enrichment", "gene.table")
intersection.data
intersectSets(tf1 = tf1, tf2 = tf2, set.of.genes = genes.peak.zt, alias=alias,gene.descriptions = description)
attractor.data <- read.table(file="../../attractor_network_representation.tsv",
sep = "\t", as.is = TRUE, row.names = NULL, header = TRUE)
head(attractor.data)
attractor.degree <- attractor.data$indegree + attractor.data$outdegree
degree.threshold <- quantile(attractor.degree, prob=0.95)
degree.top <- gene.names[attractor.degree > degree.threshold]
degree.top
sets <- list(genes.peak.zt, degree.top)
results <- supertest(x = sets, n = 5778)
results
p.value <- tail(results.table$P.value, n=1)
p.value
enrichment <- (results.table$Table)[["FE"]][nrow(results.table$Table)]
enrichment
results.table <- summary(results)
p.value <- tail(results.table$P.value, n=1)
enrichment <- (results.table$Table)[["FE"]][nrow(results.table$Table)]
p.value
enrichment
set1=degree.top
set2 = genes.peak.zt
alias=alias
gene.descriptions = description
sets <- list(set1, set2)
results <- supertest(x = sets, n = 5778)
results.table <- summary(results)
p.value <- tail(results.table$P.value, n=1) #Get the last p-value
enrichment <- (results.table$Table)[["FE"]][nrow(results.table$Table)]
intersection.genes <- (results.table$Table)[["Elements"]][nrow(results.table$Table)]
intersection.genes <- strsplit(intersection.genes, split = ", ")[[1]]
intersection.genes.agi <- intersection.genes
intersection.genes.primary.symbol <- alias[intersection.genes]
names(intersection.genes.primary.symbol) <- NULL
gene.table <- matrix(nrow=length(intersection.genes), ncol=3)
colnames(gene.table) <- c("AGI", "Primary Symbol", "Description")
gene.table[,1] <- intersection.genes.agi
gene.table[,2] <- intersection.genes.primary.symbol
intersection.data[[1]] <- p.value
intersection.data[[2]] <- enrichment
intersection.data[[3]] <- gene.table
intersection.genes.description <- gene.descriptions[intersection.genes]
names(intersection.genes.description) <- NULL
intersection.genes.description <- gene.descriptions[intersection.genes]
names(intersection.genes.description) <- NULL
intersection.data[[1]] <- p.value
intersection.data[[2]] <- enrichment
intersection.data[[3]] <- data.frame(intersection.genes,intersection.genes.primary.symbol,intersection.genes.description,stringsAsFactors = F)
names(intersection.data) <- c("p-value", "enrichment", "gene.table")
intersection.data
intersect2sets <- function(set1, set2, alias, gene.descriptions){
sets <- list(set1, set2)
results <- supertest(x = sets, n = 5778)
results.table <- summary(results)
p.value <- tail(results.table$P.value, n=1) #Get the last p-value
enrichment <- (results.table$Table)[["FE"]][nrow(results.table$Table)]
intersection.genes <- (results.table$Table)[["Elements"]][nrow(results.table$Table)]
intersection.genes <- strsplit(intersection.genes, split = ", ")[[1]]
intersection.genes.agi <- intersection.genes
intersection.genes.primary.symbol <- alias[intersection.genes]
names(intersection.genes.primary.symbol) <- NULL
gene.table <- matrix(nrow=length(intersection.genes), ncol=3)
colnames(gene.table) <- c("AGI", "Primary Symbol", "Description")
gene.table[,1] <- intersection.genes.agi
gene.table[,2] <- intersection.genes.primary.symbol
#  gene.table[,3] <- description
intersection.genes.description <- gene.descriptions[intersection.genes]
names(intersection.genes.description) <- NULL
intersection.data[[1]] <- p.value
intersection.data[[2]] <- enrichment
intersection.data[[3]] <- data.frame(intersection.genes,intersection.genes.primary.symbol,intersection.genes.description,stringsAsFactors = F)
names(intersection.data) <- c("p-value", "enrichment", "gene.table")
return(intersection.data)
}
gene.files <- list.files(path = "../../../web_apps/peak_visualizer/data/clusters/by_peaks", pattern = "peak")
gene.files
#####---Loop to perform all possible intersection between clusters and high top values genes---#####
clusters.files <- list.files(path = "../../../web_apps/peak_visualizer/data/clusters", pattern = "txt")
clusters.files
#Initialize matrix to store the results
intersection.table <- matrix(ncol=)
colnames(intersection.table) <- c("peak", "through", "p-value", "enrichment", "Intersection Genes")
#Initialize matrix to store the results
intersection.table <- matrix(ncol=)
colnames(intersection.table) <- c("peak", "through", "p-value", "enrichment", "Intersection Genes")
#Initialize matrix to store the results
intersection.table <- matrix(ncol=5)
colnames(intersection.table) <- c("peak", "through", "p-value", "enrichment", "Intersection Genes")
head(intersection.table)
length(top.genes)
top.genes <- list(degree.top, trans.top, closeness.top, betweeness.top, eccentricity.top)
names(top.genes) <- c("Degree", "Transitivity", "Closeness", "Betweeness", "Eccentricity")
length(clusters.files)
length(top.genes)
j <- 2
top.genes[j]
i <- 1
paste0("../../../web_apps/peak_visualizer/data/clusters/",gene.files[i])
set.of.genes <- read.table(file=paste0("../../../web_apps/peak_visualizer/data/clusters/",clusters.files[i]),
header = FALSE, as.is = TRUE)
clusters.files[i]
current.top
i <- 1
j <- 1
current.top <- as.vector(top.genes[j])
set.of.genes <- read.table(file=paste0("../../../web_apps/peak_visualizer/data/clusters/",clusters.files[i]),
header = FALSE, as.is = TRUE)
print("TEST")
set.of.genes <- read.table(file=paste0("../../../web_apps/peak_visualizer/data/clusters/",clusters.files[i]),
header = FALSE, as.is = TRUE)[[1]]
result <- intersect2sets(set1 = current.top, set2 = set.of.genes, alias = alias, gene.descriptions = description)
current.top <- as.vector(top.genes[j])
current.top
set.of.genes <- read.table(file=paste0("../../../web_apps/peak_visualizer/data/clusters/",clusters.files[i]),
header = FALSE, as.is = TRUE)[[1]]
set.of.genes
result <- intersect2sets(set1 = current.top, set2 = set.of.genes, alias = alias, gene.descriptions = description)
current.top <- as.vector(top.genes[j])
set.of.genes <- read.table(file=paste0("../../../web_apps/peak_visualizer/data/clusters/",clusters.files[i]),
header = FALSE, as.is = TRUE)[[1]]
result <- intersect2sets(set1 = current.top, set2 = set.of.genes, alias = alias, gene.descriptions = description)
set1 = degree.top
intersect2sets(set1=degree.top, set2 = genes.peak.zt, alias=alias, gene.descriptions = description)
typeof(degree.top)
typeof(genes.peak.zt)
set.of.genes <- read.table(file=paste0("../../../web_apps/peak_visualizer/data/clusters/",clusters.files[i]),
header = FALSE, as.is = TRUE)[[1]]
typeof(set.of.genes)
typeof(current.top)
top.genes[j]
current.top <- top.genes[j][[1]]
set.of.genes <- read.table(file=paste0("../../../web_apps/peak_visualizer/data/clusters/",clusters.files[i]),
header = FALSE, as.is = TRUE)[[1]]
print("TEST")
result <- intersect2sets(set1 = current.top, set2 = set.of.genes, alias = alias, gene.descriptions = description)
p.value <- result[1][[1]]
p.value
enrichment <- result[2][[1]]
enrichment
intersect.genes <- result[3][[1]]
intersect.genes
intersect.genes <- result[3][[1]]$intersection.genes
intersect.genes
set.of.genes[i]
clusters.files[i]
strsplit(clusters.files[i], split = "_")[[1]][1]
strsplit(clusters.files[i], split = "peak_")
##--voy por aqui
current.intersection[1] <- strsplit(clusters.files[i], split = "peak_")[[1]][1]
strsplit(clusters.files[i], split = "peak_")[[1]][1]
strsplit(clusters.files[i], split = "peak_")[[1]][2]
##--voy por aqui
circadian.info <- strsplit(clusters.files[i], split = "peak_")[[1]][2]
strsplit(circadian.info, split = "_")
strsplit(circadian.info, split = "_")[[1]][1]
current.intersection[1]<- strsplit(circadian.info, split = "_")[[1]][1]
strsplit(circadian.info, split = "_")[[1]][3]
trough.info <- strsplit(circadian.info, split = "_")[[1]][3]
trough.info
strsplit(trough.info, split = ".")
strsplit(trough.info, split = ".txt")
current.intersection[1]<- strsplit(circadian.info, split = "_")[[1]][1]
current.intersection[2] <- strsplit(trough.info, split = ".txt")[[1]][1]
current.intersection
current.intersection[1]<- strsplit(circadian.info, split = "_")[[1]][1]
current.intersection[2] <- strsplit(trough.info, split = ".txt")[[1]][1]
current.intersection[3] <- p.value
current.intersection[4] <- enrichment
current.intersection[5] <- paste(intersect.genes, collapse= ",")
current.intersection
i <- 1
j <- 1
current.top <- top.genes[j][[1]]
set.of.genes <- read.table(file=paste0("../../../web_apps/peak_visualizer/data/clusters/",clusters.files[i]),
header = FALSE, as.is = TRUE)[[1]]
print("TEST")
result <- intersect2sets(set1 = current.top, set2 = set.of.genes, alias = alias, gene.descriptions = description)
p.value <- result[1][[1]]
enrichment <- result[2][[1]]
intersect.genes <- result[3][[1]]$intersection.genes
circadian.info <- strsplit(clusters.files[i], split = "peak_")[[1]][2]
trough.info <- strsplit(circadian.info, split = "_")[[1]][3]
current.intersection[1]<- strsplit(circadian.info, split = "_")[[1]][1]
current.intersection[2] <- strsplit(trough.info, split = ".txt")[[1]][1]
current.intersection[3] <- p.value
current.intersection[4] <- enrichment
current.intersection[5] <- paste(intersect.genes, collapse= ",")
intersection.table <- rbind(intersection.table, current.intersection)
intersection.table
head(intersection.table)
intersection.table
top.genes[i]
names(top.genes[i]
)
paste0("intersections", names(top.genes[i]),".txt")
"intersections_", names(top.genes[i]),".txt")
paste0("intersections_", names(top.genes[i]),".txt")
setwd("~/Dropbox/github_repos/ATTRACTOR/network/analysis/intersections")
for (i in 1:length(top.genes))
{
for (j in 1: length(clusters.files))
{
current.top <- top.genes[i][[1]]
set.of.genes <- read.table(file=paste0("../../../web_apps/peak_visualizer/data/clusters/",clusters.files[j]),
header = FALSE, as.is = TRUE)[[1]]
print("TEST")
result <- intersect2sets(set1 = current.top, set2 = set.of.genes, alias = alias, gene.descriptions = description)
p.value <- result[1][[1]]
enrichment <- result[2][[1]]
intersect.genes <- result[3][[1]]$intersection.genes
circadian.info <- strsplit(clusters.files[i], split = "peak_")[[1]][2]
trough.info <- strsplit(circadian.info, split = "_")[[1]][3]
current.intersection[1]<- strsplit(circadian.info, split = "_")[[1]][1]
current.intersection[2] <- strsplit(trough.info, split = ".txt")[[1]][1]
current.intersection[3] <- p.value
current.intersection[4] <- enrichment
current.intersection[5] <- paste(intersect.genes, collapse= ",")
intersection.table <- rbind(intersection.table, current.intersection)
}
write.table(intersection.table,
file=paste0("/topvalues_clusters/intersections_", names(top.genes[i]),".txt"), sep="\t", row.names = FALSE)
}
for (i in 1:length(top.genes))
{
for (j in 1: length(clusters.files))
{
current.top <- top.genes[i][[1]]
set.of.genes <- read.table(file=paste0("../../../web_apps/peak_visualizer/data/clusters/",clusters.files[j]),
header = FALSE, as.is = TRUE)[[1]]
print("TEST")
result <- intersect2sets(set1 = current.top, set2 = set.of.genes, alias = alias, gene.descriptions = description)
p.value <- result[1][[1]]
enrichment <- result[2][[1]]
intersect.genes <- result[3][[1]]$intersection.genes
circadian.info <- strsplit(clusters.files[i], split = "peak_")[[1]][2]
trough.info <- strsplit(circadian.info, split = "_")[[1]][3]
current.intersection[1]<- strsplit(circadian.info, split = "_")[[1]][1]
current.intersection[2] <- strsplit(trough.info, split = ".txt")[[1]][1]
current.intersection[3] <- p.value
current.intersection[4] <- enrichment
current.intersection[5] <- paste(intersect.genes, collapse= ",")
intersection.table <- rbind(intersection.table, current.intersection)
}
write.table(intersection.table,
file=paste0("/topvalues_clusters/intersections_", names(top.genes[i]),".txt"), sep="\t", row.names = FALSE)
}
intersection.table
head(intersection.table)
#Initialize matrix to store the results
intersection.table <- matrix(ncol=5)
colnames(intersection.table) <- c("peak", "through", "p-value", "enrichment", "Intersection Genes")
#Initialize vector to add it as row into the matrix
current.intersection <- c()
head(intersection.table)
paste0("/topvalues_clusters/intersections_", names(top.genes[i]),".txt")
for (i in 1:length(top.genes))
{
for (j in 1: length(clusters.files))
{
current.top <- top.genes[i][[1]]
set.of.genes <- read.table(file=paste0("../../../web_apps/peak_visualizer/data/clusters/",clusters.files[j]),
header = FALSE, as.is = TRUE)[[1]]
print("TEST")
result <- intersect2sets(set1 = current.top, set2 = set.of.genes, alias = alias, gene.descriptions = description)
p.value <- result[1][[1]]
enrichment <- result[2][[1]]
intersect.genes <- result[3][[1]]$intersection.genes
circadian.info <- strsplit(clusters.files[i], split = "peak_")[[1]][2]
trough.info <- strsplit(circadian.info, split = "_")[[1]][3]
current.intersection[1]<- strsplit(circadian.info, split = "_")[[1]][1]
current.intersection[2] <- strsplit(trough.info, split = ".txt")[[1]][1]
current.intersection[3] <- p.value
current.intersection[4] <- enrichment
current.intersection[5] <- paste(intersect.genes, collapse= ",")
intersection.table <- rbind(intersection.table, current.intersection)
}
write.table(intersection.table,
file=paste0("topvalues_clusters/intersections_", names(top.genes[i]),".txt"), sep="\t", row.names = FALSE)
}
length(clusters.files)
#Initialize vector to add it as row into the matrix
current.intersection <- c()
head(intersection.table)
#Initialize matrix to store the results
intersection.table <- matrix(ncol=5)
colnames(intersection.table) <- c("peak", "through", "p-value", "enrichment", "Intersection Genes")
#Initialize vector to add it as row into the matrix
current.intersection <- c()
head(intersection.table)
i <- 1
j <- 1
current.top <- top.genes[i][[1]]
set.of.genes <- read.table(file=paste0("../../../web_apps/peak_visualizer/data/clusters/",clusters.files[j]),
header = FALSE, as.is = TRUE)[[1]]
current.top
set.of.genes
print("TEST")
result <- intersect2sets(set1 = current.top, set2 = set.of.genes, alias = alias, gene.descriptions = description)
p.value <- result[1][[1]]
enrichment <- result[2][[1]]
intersect.genes <- result[3][[1]]$intersection.genes
circadian.info <- strsplit(clusters.files[j], split = "peak_")[[1]][2]
trough.info <- strsplit(circadian.info, split = "_")[[1]][3]
circadian.info
trough.info
current.intersection[1]<- strsplit(circadian.info, split = "_")[[1]][1]
current.intersection[2] <- strsplit(trough.info, split = ".txt")[[1]][1]
current.intersection[3] <- p.value
current.intersection[4] <- enrichment
current.intersection[5] <- paste(intersect.genes, collapse= ",")
intersection.table <- rbind(intersection.table, current.intersection)
for (j in 1:length(clusters.files))
{
current.top <- top.genes[i][[1]]
set.of.genes <- read.table(file=paste0("../../../web_apps/peak_visualizer/data/clusters/",clusters.files[j]),
header = FALSE, as.is = TRUE)[[1]]
print("TEST")
result <- intersect2sets(set1 = current.top, set2 = set.of.genes, alias = alias, gene.descriptions = description)
p.value <- result[1][[1]]
enrichment <- result[2][[1]]
intersect.genes <- result[3][[1]]$intersection.genes
circadian.info <- strsplit(clusters.files[j], split = "peak_")[[1]][2]
trough.info <- strsplit(circadian.info, split = "_")[[1]][3]
current.intersection[1]<- strsplit(circadian.info, split = "_")[[1]][1]
current.intersection[2] <- strsplit(trough.info, split = ".txt")[[1]][1]
current.intersection[3] <- p.value
current.intersection[4] <- enrichment
current.intersection[5] <- paste(intersect.genes, collapse= ",")
intersection.table <- rbind(intersection.table, current.intersection)
}
write.table(intersection.table,
file=paste0("topvalues_clusters/intersections_", names(top.genes[i]),".txt"), sep="\t", row.names = FALSE)
clusters.files
#Initialize matrix to store the results
intersection.table <- matrix(ncol=5)
colnames(intersection.table) <- c("peak", "through", "p-value", "enrichment", "Intersection Genes")
#Initialize vector to add it as row into the matrix
current.intersection <- c()
head(intersection.table)
j <- 13
current.top <- top.genes[i][[1]]
set.of.genes <- read.table(file=paste0("../../../web_apps/peak_visualizer/data/clusters/",clusters.files[j]),
header = FALSE, as.is = TRUE)[[1]]
current.top
set.of.genes
result <- intersect2sets(set1 = current.top, set2 = set.of.genes, alias = alias, gene.descriptions = description)
p.value <- result[1][[1]]
enrichment <- result[2][[1]]
intersect.genes <- result[3][[1]]$intersection.genes
circadian.info <- strsplit(clusters.files[j], split = "peak_")[[1]][2]
circadian.info
trough.info <- strsplit(circadian.info, split = "_")[[1]][3]
trough.info
current.intersection[1]<- strsplit(circadian.info, split = "_")[[1]][1]
current.intersection[1]
current.intersection[2] <- strsplit(trough.info, split = ".txt")[[1]][1]
current.intersection[2]
current.intersection[4] <- enrichment
current.intersection[5] <- paste(intersect.genes, collapse= ",")
intersection.table <- rbind(intersection.table, current.intersection)
head(intersection.table)
clusters.files)
clusters.files
clusters.files[1]
clusters.files[2]
#Initialize matrix to store the results
intersection.table <- matrix(ncol=5)
colnames(intersection.table) <- c("peak", "through", "p-value", "enrichment", "Intersection Genes")
#Initialize vector to add it as row into the matrix
current.intersection <- c()
head(intersection.table)
i <- 1
j <- 13
current.top <- top.genes[i][[1]]
set.of.genes <- read.table(file=paste0("../../../web_apps/peak_visualizer/data/clusters/",clusters.files[j]),
header = FALSE, as.is = TRUE)[[1]]
print("TEST")
result <- intersect2sets(set1 = current.top, set2 = set.of.genes, alias = alias, gene.descriptions = description)
p.value <- result[1][[1]]
enrichment <- result[2][[1]]
intersect.genes <- result[3][[1]]$intersection.genes
circadian.info <- strsplit(clusters.files[j], split = "peak_")[[1]][2]
trough.info <- strsplit(circadian.info, split = "_")[[1]][3]
current.intersection[1]<- strsplit(circadian.info, split = "_")[[1]][1]
current.intersection[2] <- strsplit(trough.info, split = ".txt")[[1]][1]
current.intersection[3] <- p.value
current.intersection[4] <- enrichment
current.intersection[5] <- paste(intersect.genes, collapse= ",")
intersection.table <- rbind(intersection.table, current.intersection)
intersection.table
clusters.files[13]
intersection.table[j,1]<- strsplit(circadian.info, split = "_")[[1]][1]
#Initialize matrix to store the results
intersection.table <- matrix(ncol=5)
#Initialize matrix to store the results
intersection.table <- matrix(ncol=5, nrow = length(clusters.files))
colnames(intersection.table) <- c("peak", "through", "p-value", "enrichment", "Intersection Genes")
head(intersection.table)
i <- 1
j <- 13
current.top <- top.genes[i][[1]]
set.of.genes <- read.table(file=paste0("../../../web_apps/peak_visualizer/data/clusters/",clusters.files[j]),
header = FALSE, as.is = TRUE)[[1]]
print("TEST")
result <- intersect2sets(set1 = current.top, set2 = set.of.genes, alias = alias, gene.descriptions = description)
p.value <- result[1][[1]]
enrichment <- result[2][[1]]
intersect.genes <- result[3][[1]]$intersection.genes
circadian.info <- strsplit(clusters.files[j], split = "peak_")[[1]][2]
trough.info <- strsplit(circadian.info, split = "_")[[1]][3]
intersection.table[j,1]<- strsplit(circadian.info, split = "_")[[1]][1]
intersection.table[j,2] <- strsplit(trough.info, split = ".txt")[[1]][1]
intersection.table[j,3] <- p.value
intersection.table[j,4] <- enrichment
intersection.table[j,5] <- paste(intersect.genes, collapse= ",")
j <- 6
#Initialize matrix to store the results
intersection.table <- matrix(ncol=5, nrow = length(clusters.files))
colnames(intersection.table) <- c("peak", "through", "p-value", "enrichment", "Intersection Genes")
head(intersection.table)
current.top <- top.genes[i][[1]]
set.of.genes <- read.table(file=paste0("../../../web_apps/peak_visualizer/data/clusters/",clusters.files[j]),
header = FALSE, as.is = TRUE)[[1]]
print("TEST")
result <- intersect2sets(set1 = current.top, set2 = set.of.genes, alias = alias, gene.descriptions = description)
p.value <- result[1][[1]]
enrichment <- result[2][[1]]
intersect.genes <- result[3][[1]]$intersection.genes
circadian.info <- strsplit(clusters.files[j], split = "peak_")[[1]][2]
trough.info <- strsplit(circadian.info, split = "_")[[1]][3]
intersection.table[j,1]<- strsplit(circadian.info, split = "_")[[1]][1]
intersection.table[j,2] <- strsplit(trough.info, split = ".txt")[[1]][1]
intersection.table[j,3] <- p.value
intersection.table[j,4] <- enrichment
intersection.table[j,5] <- paste(intersect.genes, collapse= ",")
head(intersection.table)
for (i in 1:length(top.genes))
{
for (j in 1:length(clusters.files))
{
current.top <- top.genes[i][[1]]
set.of.genes <- read.table(file=paste0("../../../web_apps/peak_visualizer/data/clusters/",clusters.files[j]),
header = FALSE, as.is = TRUE)[[1]]
print("TEST")
result <- intersect2sets(set1 = current.top, set2 = set.of.genes, alias = alias, gene.descriptions = description)
p.value <- result[1][[1]]
enrichment <- result[2][[1]]
intersect.genes <- result[3][[1]]$intersection.genes
circadian.info <- strsplit(clusters.files[j], split = "peak_")[[1]][2]
trough.info <- strsplit(circadian.info, split = "_")[[1]][3]
intersection.table[j,1]<- strsplit(circadian.info, split = "_")[[1]][1]
intersection.table[j,2] <- strsplit(trough.info, split = ".txt")[[1]][1]
intersection.table[j,3] <- p.value
intersection.table[j,4] <- enrichment
intersection.table[j,5] <- paste(intersect.genes, collapse= ",")
# intersection.table <- rbind(intersection.table, current.intersection)
}
write.table(intersection.table,
file=paste0("topvalues_clusters/intersections_", names(top.genes[i]),".txt"), sep="\t", row.names = FALSE)
}
#Initialize matrix to store the results
intersection.table <- matrix(ncol=5, nrow = length(clusters.files))
colnames(intersection.table) <- c("peak", "through", "p-value", "enrichment", "Intersection Genes")
head(intersection.table)
for (i in 1:length(top.genes))
{
for (j in 1:length(clusters.files))
{
current.top <- top.genes[i][[1]]
set.of.genes <- read.table(file=paste0("../../../web_apps/peak_visualizer/data/clusters/",clusters.files[j]),
header = FALSE, as.is = TRUE)[[1]]
print("TEST")
result <- intersect2sets(set1 = current.top, set2 = set.of.genes, alias = alias, gene.descriptions = description)
p.value <- result[1][[1]]
enrichment <- result[2][[1]]
intersect.genes <- result[3][[1]]$intersection.genes
circadian.info <- strsplit(clusters.files[j], split = "peak_")[[1]][2]
trough.info <- strsplit(circadian.info, split = "_")[[1]][3]
intersection.table[j,1]<- strsplit(circadian.info, split = "_")[[1]][1]
intersection.table[j,2] <- strsplit(trough.info, split = ".txt")[[1]][1]
intersection.table[j,3] <- p.value
intersection.table[j,4] <- enrichment
intersection.table[j,5] <- paste(intersect.genes, collapse= ",")
# intersection.table <- rbind(intersection.table, current.intersection)
}
write.table(intersection.table,
file=paste0("topvalues_clusters/intersections_", names(top.genes[i]),".txt"),
sep="\t", row.names = FALSE, quote = FALSE)
}
