setwd("~/Dropbox/github_repos/ATTRACTOR/network/intersections")
library(SuperExactTest)
tf1 <- read.table(file = "../../web_apps/peak_visualizer/data/targets_in_network/CCA1_ZT02_targets_in_network.txt",
header = FALSE, as.is = TRUE)
tf2 <- read.table(file="../../web_apps/peak_visualizer/data/targets_in_network/LHY_targets_in_network.txt",
header = FALSE, as.is = TRUE)
genes.peak.zt <- read.table(file = "../../web_apps/peak_visualizer/data/clusters/peak_ZT0.txt",
header = FALSE, as.is = TRUE)
sets <- c(cca1.targets, lhy.targets, genes.peak.zt)
names(sets) <- c("cca1", "lhy", "peakZT0")
results <- supertest(x = sets, n = 6830)
intersectSets <- function(tf1,tf2,set.of.genes){
intersection.data <- list()
sets <- c(tf1, tf2, set.of.genes)
#names(sets) <- c("cca1", "lhy", "peakZT0")
results <- supertest(x = sets, n = 6830)
results.table <- summary(results)
p.value <- tail(results.table$P.value, n=1) #Get the last p-value
enrichment <- (results.table$Table)[["FE"]][nrow(results.table$Table)]
intersection.genes <- (results.table$Table)[["Elements"]][nrow(results.table$Table)]
intersection.genes <- strsplit(intersection.genes, split = ", ")[[1]]
intersection.data[[1]] <- p.value
intersection.data[[2]] <- enrichment
intersection.data[[3]] <- intersection.genes #hay que meter gene.table con info
names(intersection.data) <- c("p-value", "enrichment", "gene.table")
return(intersection.data)
}
intersectSets(tf1, tf2, genes.peak.zt)
list.files(path = "../../web_apps/peak_visualizer/data/targets_in_network/", pattern = "targets")
tf.files <- list.files(path = "../../web_apps/peak_visualizer/data/targets_in_network/", pattern = "targets")
setwd("~/Dropbox/github_repos/ATTRACTOR/network/intersections")
